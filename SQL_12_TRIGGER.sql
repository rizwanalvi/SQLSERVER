CREATE DATABASE empdb
USE empdb;

CREATE TABLE EMP(EMPID INT IDENTITY ,EMPNAME VARCHAR(150), EMP_SALARY INT,  PRIMARY KEY(EMPID));
/*CREATE TABLE EMP(EMPID INT , EMP_SALARY INT,  PRIMARY KEY(EMPID) );*/

INSERT INTO EMP VALUES ('NOMAN KHAN',6000);
INSERT INTO EMP VALUES ('AHMED KHAN',6000);
INSERT INTO EMP VALUES ('FARHAN KHAN',10000);
INSERT INTO EMP VALUES ('ZEESHAN KHAN',9000);
INSERT INTO EMP VALUES ('ZAYYAN KHAN',9000);
INSERT INTO EMP VALUES ('IMRAN KHAN',6000);
INSERT INTO EMP VALUES ('FAIZAN KHAN',8000);
INSERT INTO EMP VALUES ('HAMDAN KHAN',8000);
INSERT INTO EMP VALUES ('ROHAN KHAN',6600);
INSERT INTO EMP VALUES ('HAROON KHAN',7000);


SELECT * FROM EMP;

CREATE TRIGGER tINSERT
ON EMP
FOR INSERT
AS
BEGIN
PRINT 'DATA HAS BEEN INSERTED'
END

INSERT INTO EMP VALUES('HAROON RAHEED',12000)
SELECT * FROM EMP
CREATE TRIGGER tUPDATE
ON EMP
FOR UPDATE
AS

BEGIN
PRINT 'DATA IS UPDATED'
END

UPDATE EMP SET EMP_SALARY = 8000
WHERE EMPID = 10

CREATE TRIGGER tDELETE
ON EMP
FOR DELETE
AS
BEGIN
DECLARE @COT INT
SET @COT = (SELECT @@ROWCOUNT)
PRINT CONCAT('DELETED :',@COT)
END
SELECT * FROM EMP


UPDATE EMP SET EMP_SALARY = 6000 WHERE EMPID = 12
CREATE TRIGGER MINSAL
ON EMP
FOR INSERT
AS
BEGIN
IF (SELECT EMP_SALARY FROM inserted) < 6000
	ROLLBACK
ELSE
	PRINT 'Data has been inserted.'
END
INSERT INTO EMP VALUES ('YM ',6000)


CREATE TRIGGER NODELETE
ON EMP
FOR DELETE
AS
BEGIN
ROLLBACK
END
DELETE FROM EMP WHERE EMPID =12 

CREATE TRIGGER SECURE
ON DATABASE
FOR DROP_TABLE,ALTER_TABLE
AS
BEGIN
ROLLBACK
END
DROP DATABASE empdb
/*----------------------BASIC STRUCTURE--------------------------*/
/*-----------BASIC STRUCTURE--------------------------------------*/
CREATE TRIGGER TEST_INSERT
ON EMP
FOR INSERT
AS
BEGIN
PRINT 'INSERT OPERATION OCCUR'
END
/*------------------TEST TRIGGER--------------*/

INSERT INTO EMP VALUES ('AMMAN',5500);

DROP TRIGGER TEST_INSERT;

CREATE TRIGGER TEST_DELETE
ON EMP
FOR DELETE
AS
BEGIN
PRINT 'DELETE OPERATION OCCUR'
END
GO
DELETE FROM EMP WHERE EMPID=1
GO

CREATE TRIGGER TEST_UPDATE
ON EMP
FOR UPDATE
AS
BEGIN
PRINT 'UPDATE OPERATION OCCUR'
END
GO
UPDATE EMP
SET EMP_SALARY=2000
WHERE EMPID=1005
GO

/*----------------------APPLY TRIGGERS--------------------------*/
/*----------------------INSERT TRIGGER---------------------------*/
CREATE TRIGGER EMP_MAX_SALARY 
ON EMP FOR INSERT
AS
/*IF (SELECT EMP_SALARY FROM inserted WHERE EMPID=1003) >6000*/
IF (SELECT EMP_SALARY FROM inserted) >6000
BEGIN
PRINT ('VALUE EXCESSD THE MAX_SALARY')
ROLLBACK 
END
GO


INSERT INTO EMP (EMPID,EMP_SALARY)
VALUES (1006,6001);
GO
SELECT * FROM EMP
GO
GO
UPDATE EMP 
SET  EMP_SALARY=6000
WHERE EMPID=1003;
GO
SELECT * FROM EMP
GO
/*------------------------UPDATE TRIGGER-----------------------------*/
CREATE TRIGGER EMP_MAX_SALARY_UPDATE 
ON EMP FOR UPDATE
AS
IF (SELECT EMP_SALARY FROM inserted) >6000
BEGIN
PRINT ('VALUE EXCESSD THE MAX_SALARY')
ROLLBACK
END
GO
UPDATE EMP 
SET  EMP_SALARY=6001
WHERE EMPID=1005;
GO
SELECT * FROM EMP
GO

/*-----------------------DELETE TRIGGER AFTER----------------------*/

CREATE TRIGGER EMP_DELETE_RECORD
ON EMP
AFTER DELETE
AS
/*If(SELECT COUNT(*) FROM deleted)>3*/
BEGIN
DECLARE @num nchar;
SELECT @num = COUNT(*) FROM deleted
PRINT 'No. of employees deleted = ' + @num
END
GO
DELETE FROM EMP 
GO
sp_helptext 'EMP_DELETE_RECORD'

/*-----------------on database trigger---------------*/
CREATE TRIGGER Secure
ON DATABASE
FOR DROP_TABLE, ALTER_TABLE
AS
PRINT 'You must disable Trigger "Secure" to drop or alter tables!'
ROLLBACK
GO
DROP TABLE EMP;
GO
SELECT * FROM EMP;















